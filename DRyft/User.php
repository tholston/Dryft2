<?php
/**
 * Model user objects and provide storage/retrieval from the database.
 */

namespace DRyft;

class User {

	/**
	 * User identification number
	 *
	 * @type int
	 */
	protected $id;

	/**
	 * User account name
	 *
	 * @type string
	 */
	protected $username;

	/**
	 * User password hash
	 *
	 * This value is a hash generated by the password_hash algorithm.
	 *
	 * @type string
	 */
	protected $passwordHash;


	public function __construct( string $userName, int $userId = null ) {
		$this->id       = $userId;
		$this->username = $userName;
	}


	/**
	 * Get the username
	 * @return string
	 */
	public function username() {
		return $this->username;
	}


	/**
	 * Set a new password
	 *
	 * @param string $password
	 */
	public function setPassword( string $password ) {
		$this->passwordHash = password_hash( $password, PASSWORD_DEFAULT );
	}

	/**
	 * Compare a user's password
	 *
	 * @param string $password
	 * @return boolean
	 */
	public function validatePassword( string $password ) {
		return password_verify( $password, $this->passwordHash );
	}



	/**
	 * Store the object to the database.
	 *
	 * @return boolean
	 */
	public function save() {
		return false;
	}



	/**
	 * Load a user by username
	 *
	 * @param string $username
	 * @return mixed
	 */
	public function getUserByName( string $username ) {

		// Grab a copy of the database connection
		$db = Database\Connection::getConnection();

		$select = 'SELECT * FROM `users` WHERE `username` = "'
			. $db->escape_string( $username ) . '";'
		;

		// confirm the query worked
		if ( ( $result = $db->query( $select ) ) === false ) {
			// TODO: replace a simple error with an exception
			return null;
		}

		// confirm the result set size
		if ( $result->num_rows != 1 ) {
			// TODO: replace a simple error with an exception
			return null;
		}

		// confirm the result object
		if ( ( $data = $result->fetch_object( ) ) === null ) {
			// TODO: replace a simple error with an exception
			return null;
		}

		// convert the resulting object
		return self::objectForRow( $data );
	}

	/**
	 * Convert a MySQL row object to a User
	 *
	 * @param object
	 * @return User
	 */
	public function objectForRow( $data ) {

		// Create the appropriate subclass based on the user type
		return new User(
			$data->username,
			$data->USER_ID
		);
	}
}